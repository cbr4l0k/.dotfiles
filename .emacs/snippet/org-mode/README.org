#+TITLE:     Org snippets
#+AUTHOR:    Yeiipi
#+PROPERTY: header-args:yasnippet :mkdirp yes :padline no

* Table of Contents :toc:
- [[#math][Math]]
- [[#code-utilities][Code utilities]]

* Math

#+BEGIN_SRC yasnippet :tangle ./big-array
# name: big_array
# key: {{
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\left\\\\{\n \\begin{array}{ll}\n `yas-selected-text`\n \\end{array}\n \\right.$0 ")
(yas-expand-snippet "\\left\\\\{\n \\begin{array}{ll}\n $1\n \\end{array}\n \\right.$0\n "))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./bigfun
# name: bigfun
# key: bigfun
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\begin\{align*\}\n\t$0\n\\end\{align\}")
(yas-expand-snippet "\\begin\{align*\}\n\t`yas-selected-text`$0\n\\end\{align*\}"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./dots
# name: dots
# key: ...
# contributor:yeiipi
# group : math
# --
\\dots $0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./exponential
# name: exponential
# key: exp
# contributor:yeiipi
# group : math
# --
e^\{${1:x}\} $0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./fun-densidad
# name: fun_densidad
# key: fd
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "f\\left\(`yas-selected-text`\\right\) $0")
(yas-expand-snippet "f\\left\($1\\right\) $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./fun-gen-momentos
# name: fun_gen_momentos
# key: fgm
# contributor:yeiipi
# group : math
# --
M_\{${1:X}\}\\left\(${2:s}\\right\)$0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./mean
# name: mean
# key: mean
# contributor:yeiipi
# group : math
# type: command
# --
(progn
  (if
      (region-active-p)
      (yas-expand-snippet "\\mathbb{E}\\left(`yas-selected-text`\\right) $0")
    (yas-expand-snippet "\\mathbb{E}\\left($1\\right) $0")))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./probability
# name: probability
# key: prob
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "P\\left\(`yas-selected-text`\\right\) $0")
(yas-expand-snippet "P\\left\($1\\right\) $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./implied-by
# name: implied_by
# key: =<
# contributor:yeiipi
# group : math
# --
\\impliedby $0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./implies
# name: implies
# key: =>
# contributor:yeiipi
# group : math
# --
\\implies $0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./si-y-solo-si
# name: si_y_solo_si
# key: iff
# contributor:yeiipi
# group : math
# --
\\if $0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./mk-math
# name: mk_math
# key: mk
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
    (yas-expand-snippet "\\\\(`yas-selected-text` $1\\\\)$0")
  (yas-expand-snippet "\\\\($1\\\\)$0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./dm-math
# name: dm_math
# key: dm
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
    (yas-expand-snippet "\\\\[ `yas-selected-text` $1 \\\\]$0")
  (yas-expand-snippet "\\\\[ $1 \\\\]$0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./fraction
# name: fraction
# key: frac
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p) (yas-expand-snippet "\\frac\{`yas-selected-text`\}\{$1\}$0") (yas-expand-snippet "\\frac\{$1\}\{$2\}$0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./frac2
# name: //
# key: //
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p) (yas-expand-snippet "\\frac\{`yas-selected-text`\}\{$1\}$0") (yas-expand-snippet "\\frac\{$1\}\{$2\}$0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./frac3
# name: /
# key: /
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
    (yas-expand-snippet "\\frac\{`yas-selected-text`\}\{$1\}$0")
  (yas-expand-snippet "\\frac\{$1\}\{$2\}$0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./equals
# name: equals
# key: ==
# contributor:yeiipi
# group : math
# --
&= $1 \\\\
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./not-equals
# name: not_equals
# key: !=
# contributor:yeiipi
# group : math
# --
\\neq$0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./fun-ceil
# name: fun_ceil
# key: ceil
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
    (yas-expand-snippet "\\left\\lceil `yas-selected-text` \\right\\rceil$0")
  (yas-expand-snippet "\\left\\lceil $1 \\right\\rceil$0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./fun-floor
# name: fun_floor
# key: floor
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
    (yas-expand-snippet "\\left\\lfloor `yas-selected-text` \\right\\rfloor$0")
  (yas-expand-snippet "\\left\\lfloor $1 \\right\\rfloor$0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./matrix_plain
# name: matrix
# key: mat
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
    (yas-expand-snippet "\\begin\{matrix\} `yas-selected-text` \\end\{matrix\} $0")
  (yas-expand-snippet "\\begin\{matrix\} $1 \\end\{matrix\} $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./matrix_round
# name: (matrix)
# key: pmat
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
    (yas-expand-snippet "\\begin\{pmatrix\} `yas-selected-text` \\end\{pmatrix\} $0")
  (yas-expand-snippet "\\begin\{pmatrix\} $1 \\end\{pmatrix\} $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./matrix_square
# name: [matrix]
# key: bmat
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
    (yas-expand-snippet "\\begin\{bmatrix\} `yas-selected-text` \\end\{bmatrix\} $0")
  (yas-expand-snippet "\\begin\{bmatrix\} $1 \\end\{bmatrix\} $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./matrix_curly
# name: {matrix}
# key: Bmat
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
    (yas-expand-snippet "\\begin\{Bmatrix\} `yas-selected-text` \\end\{Bmatrix\} $0")
  (yas-expand-snippet "\\begin\{Bmatrix\} $1 \\end\{Bmatrix\} $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./matrix_pipes
# name: |matrix|
# key: vmat
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
    (yas-expand-snippet "\\begin\{vmatrix\} `yas-selected-text` \\end\{vmatrix\} $0")
  (yas-expand-snippet "\\begin\{vmatrix\} $1 \\end\{vmatrix\} $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./matrix_pipespipes
# name: ||matrix||
# key: Vmat
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
    (yas-expand-snippet "\\begin\{Vmatrix\} `yas-selected-text` \\end\{Vmatrix\} $0")
  (yas-expand-snippet "\\begin\{Vmatrix\} $1 \\end\{Vmatrix\} $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./lr1a
# name: lr()
# key: lr
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\left( `yas-selected-text` \\right) $0")
(yas-expand-snippet "\\left( $1 \\right) $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./lr1b
# name: lr()b
# key: lr(
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\left( `yas-selected-text` \\right) $0")
(yas-expand-snippet "\\left( $1 \\right) $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./lr-bar
# name: lr_bar
# key: lr|
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\left| `yas-selected-text` \\right| $0")
(yas-expand-snippet "\\left| $1 \\right| $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./lr-BAR
# name: lr_BAR
# key: lr||
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\left\\| `yas-selected-text` \\right\\| $0")
(yas-expand-snippet "\\left\\| $1 \\right\\| $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./lr-llave
# name: lr_llave
# key: lr{
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\left\\\\\{ `yas-selected-text` \\right\\\\\} $0")
(yas-expand-snippet "\\left\\\\\{ $1 \\right\\\\\} $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./lr-sqr
# name: lr_sqr
# key: lr[
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\left[ `yas-selected-text` \\right] $0")
(yas-expand-snippet "\\left[ $1 \\right] $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./lr-tri
# name: lr_tri
# key: lr<
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\langle `yas-selected-text` \\rangle $0")
(yas-expand-snippet "\\langle $1 \\rangle $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./bra
# name: bra
# key: bra
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\left\\langle `yas-selected-text` \\righ| $0")
(yas-expand-snippet "\\left\\langle $1 \\righ| $0"))
#+END_SRC


#+BEGIN_SRC yasnippet :tangle ./ket
# name: ket
# key: ket
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\left| `yas-selected-text` \\right\\rangle $0")
(yas-expand-snippet "\\left| $1 \\right\\rangle $0"))
#+END_SRC


#+BEGIN_SRC yasnippet :tangle ./braket
# name: braket
# key: braket
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\left\\langle $1 \\right|\\left. $2 \\right\\rangle $0")
(yas-expand-snippet "\\left\\langle $1 \\right|\\left. $2 \\right\\rangle $0"))
#+END_SRC


#+BEGIN_SRC yasnippet :tangle ./ketbra
# name: ketbra
# key: ketbra
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\left| $1 \\right\\rangle \\left\\langle $2 \\right| $0")
(yas-expand-snippet "\\left| $1 \\right\\rangle \\left\\langle $2 \\right| $0"))
#+END_SRC


#+BEGIN_SRC yasnippet :tangle ./conjugado
# name: conjugado
# key: conj
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\overline{`yas-selected-text` } $0")
(yas-expand-snippet "\\overline{$1} $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./vector
# name: vector
# key: vect
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\overrightarrow{`yas-selected-text`} $0")
(yas-expand-snippet "\\overrightarrow{$1} $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./sum
# name: sum
# key: sum
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\sum_\{${1:i\}=${2:0}}^\{${3:\\infty}\} $0")
(yas-expand-snippet "\\sum_\{${1:i\}=${2:0}}^\{${3:\\infty}\} `yas-selected-text`"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./integral
# name: integral
# key: int
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\int_\{$1\}^\{$2\} $0")
(yas-expand-snippet "\\int_\{$1\}^\{$2\} `yas-selected-text`"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./lim
# name: lim
# key: lim
# contributor:yeiipi
# group : math
# --
\\lim_\{${1:n} \\to ${2:\\infty}\} $0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./productoria
# name: productoria
# key: prod
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\prod_\{${1:i\}=${2:0}\}^\{${3:\\infty}\} $0")
(yas-expand-snippet "\\prod_\{${1:i\}=${2:0}\}^\{${3:\\infty}\} `yas-selected-text`"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./ecuación-parcial
# name: ecuación_parcial
# key: part
# contributor:yeiipi
# group : math
# --
\\frac\{\\partial ${1:V}\}\{\\partial ${2:x}\} $0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./sqrt
# name: sqrt
# key: sq
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\sqrt\{ $1 \} $0")
(yas-expand-snippet "\\sqrt\{`yas-selected-text`\} $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./n-power
# name: n_power
# key: td
# contributor:yeiipi
# group : math
# --
^\{$1\}
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./2-power
# name: 2_power
# key: sr
# contributor:yeiipi
# group : math
# --
^2
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./3-power
# name: 3_power
# key: cb
# contributor:yeiipi
# group : math
# --
^3
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./subscript
# name: subscript
# key: __
# contributor:yeiipi
# group : math
# --
_\{$1\}
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./infinity
# name: infinity
# key: 000
# contributor:yeiipi
# group : math
# --
\\infty$0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./leq
# name: leq
# key: <=
# contributor:yeiipi
# group : math
# --
\le$0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./geq
# name: geq
# key: >=
# contributor:yeiipi
# group : math
# --
\\ge$0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./congruente
# name: congruente
# key: ~=
# contributor:yeiipi
# group : math
# --
\\cong
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./no-congruente
# name: no_congruente
# key: ~=~
# contributor:yeiipi
# group : math
# --
\\ncong
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./existe
# name: existe
# key: EE
# contributor:yeiipi
# group : math
# --
\\exists
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./para-todo
# name: para_todo
# key: AA
# contributor:yeiipi
# group : math
# --
\\forall
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./combinatoria
# name: combinatoria
# key: comb
# contributor:yeiipi
# group : math
# --
\{\{$1\}\\choose\{$2\}\} $0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./x-sub-n
# name: x_sub_n
# key: xnn
# contributor:yeiipi
# group : math
# --
x_\{${1:n}\} $0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./N-sub-n
# name: N_sub_n
# key: Nn
# contributor:yeiipi
# group : math
# --
${1:N}_\{${1:n}\} $0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./circle_plus
# name: circle_plus
# key: +o
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\oplus $0")
(yas-expand-snippet "\\oplus $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./circle_times
# name: circle_times
# key: xo
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\otimes $0")
(yas-expand-snippet "\\otimes $0"))
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./bold-sign
# name: bold_sign
# key: bss
# contributor:yeiipi
# group : math
# type: command
# --
(if (region-active-p)
(yas-expand-snippet "\\boldsymbol\{ `yas-selected-text` \}$0")
(yas-expand-snippet "\\boldsymbol\{ $1 \}$0"))
#+END_SRC

* Code utilities

#+BEGIN_SRC yasnippet :tangle ./r-plot
# name: r_plot
# key: rplot
# contributor:yeiipi
# group : code block
# --
#+HEADER: :file ${1:file location}
#+HEADER: :session
#+HEADER: :results graphics file
#+HEADER: :noweb yes
#+HEADER: :exports both $0
#+END_SRC

#+BEGIN_SRC yasnippet :tangle ./img-size
# name: img_size
# key: img_size
# contributor:yeiipi
# group : code block
# --
#+attr_html: :width ${1:420}px
#+END_SRC
